# Generated by Django 3.1.5 on 2021-02-04 03:16

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0003_add_wbc_percentage_fields_to_data'),
    ]

    operations = [
        migrations.RenameField(
            model_name='data',
            old_name='lymp_percentage',
            new_name='lymp_Upercentage_Rwbc',
        ),
        migrations.RenameField(
            model_name='data',
            old_name='mono_percentage',
            new_name='mono_Upercentage_Rwbc',
        ),
        migrations.RenameField(
            model_name='data',
            old_name='baso_percentage',
            new_name='baso_Upercentage_Rwbc',
        ),
        migrations.RenameField(
            model_name='data',
            old_name='eo_percentage',
            new_name='eo_Upercentage_Rwbc',
        ),
        migrations.RenameField(
            model_name='data',
            old_name='neut_percentage',
            new_name='neut_Upercentage_Rwbc',
        ),
        migrations.AddField(
            model_name='data',
            name='aat',
            field=models.SmallIntegerField(blank=True, help_text='Alpha 1-antitrypsin (mg/dL)', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(500)], verbose_name='AAT (mg/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='aat_UumolL',
            field=models.SmallIntegerField(blank=True, help_text='Alpha 1-antitrypsin (umol/L)', null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(150)], verbose_name='AAT (umol/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='aptt',
            field=models.SmallIntegerField(blank=True, help_text='Activated Partial Thromboplastin Time (s)', null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)], verbose_name='APTT (s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='atb',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Antithrombin (kIU/L)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(4)], verbose_name='ATB (kIU/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='atb_UmgmL',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Antithrombin (mg/mL)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2)], verbose_name='ATB (mg/mL)'),
        ),
        migrations.AddField(
            model_name='data',
            name='bt',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Bleeding Time (minutes)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='BT (minutes)'),
        ),
        migrations.AddField(
            model_name='data',
            name='cd4',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='CD4+ T cells (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='CD4 (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='crp',
            field=models.SmallIntegerField(blank=True, help_text='C Reactive Protein (mg/L)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)], verbose_name='CRP (mg/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='crp_UnmolL',
            field=models.SmallIntegerField(blank=True, help_text='C Reactive Protein (nmol/L)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(500)], verbose_name='CRP (nmol/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='esr',
            field=models.SmallIntegerField(blank=True, help_text='Erythrocyte Sedimentation Rate (mm/H)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='ESR (mm/H)'),
        ),
        migrations.AddField(
            model_name='data',
            name='fbg',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Fibrogen (g/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(9)], verbose_name='FBG (g/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='hgb_UmmolL',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Hemoglobin (mmol/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(4)], verbose_name='HGB (mmol/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='hgbg',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Glycated Hemoglobin (% of Hemoglobin)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)], verbose_name='Glycated Hemoglobin (% of HGB)'),
        ),
        migrations.AddField(
            model_name='data',
            name='hgbp',
            field=models.SmallIntegerField(blank=True, help_text='Hemoglobin in Plasma (mg/dL)', null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(8)], verbose_name='HGBP (mg/dL)'),
        ),
        migrations.AddField(
            model_name='data',
            name='hgbp_UumolL',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Hemoglobin in Plasma (umol/L)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2)], verbose_name='HGBP (umol/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='htg',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Haptoglobin (g/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(5)], verbose_name='HTG (g/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='igd',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Inmunoglobulines D (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='IGD (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='ige',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Inmunoglobulines E (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='IGE (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='igg',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Inmunoglobulines G (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(100.0), django.core.validators.MaxValueValidator(2500.0)], verbose_name='IGG (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='inr',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='International Normalized Ratio', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(3)], verbose_name='INR'),
        ),
        migrations.AddField(
            model_name='data',
            name='mch_Ufmolcell',
            field=models.SmallIntegerField(blank=True, help_text='Mean Cell Hemoglobin (fmol/cell)', null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2)], verbose_name='MCH (fmol/cell)'),
        ),
        migrations.AddField(
            model_name='data',
            name='mchc_UgdL',
            field=models.SmallIntegerField(blank=True, help_text='Mean Corpuscular Hemoglobin Concentration (g/dL)', null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(50)], verbose_name='MCHC (g/dL)'),
        ),
        migrations.AddField(
            model_name='data',
            name='mchc_UmmolL',
            field=models.SmallIntegerField(blank=True, help_text='Mean Corpuscular Hemoglobin Concentration (mmol/L)', null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(8)], verbose_name='MCHC (mmol/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='mnl',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Mononuclear Leukocytes (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(20.0)], verbose_name='MNL (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='mnl_Upercentace_Rwbc',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Mononuclear Leukocytes (% of White Blood Cells)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(99.0)], verbose_name='MNL (% WBC)'),
        ),
        migrations.AddField(
            model_name='data',
            name='mpv',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Mean Platelet Volume (fL)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='MPV (fL)'),
        ),
        migrations.AddField(
            model_name='data',
            name='nbf',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Neutrophilic Band Forms (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2)], verbose_name='NBF (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='nbf_Upercentage_Rwbc',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Neutrophilic Band Forms (% of White Blood Cells)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(99.0)], verbose_name='NBF (% WBC)'),
        ),
        migrations.AddField(
            model_name='data',
            name='pct',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Procalcitonin (ng/dL or ug/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(2.0)], verbose_name='PCT (ng/dL)'),
        ),
        migrations.AddField(
            model_name='data',
            name='pt',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Prothrombin Time (s)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(550)], verbose_name='PT (s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='rtc',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Reticulocytes (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(5.0), django.core.validators.MaxValueValidator(250.0)], verbose_name='Reticulocytes (x10^9/L)'),
        ),
        migrations.AddField(
            model_name='data',
            name='rtc_Upercentage_Rrbc',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Reticulocytes (% of RBC)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50.0)], verbose_name='RTC (% of RBC)'),
        ),
        migrations.AddField(
            model_name='data',
            name='tct',
            field=models.SmallIntegerField(blank=True, help_text='Activated Partial Thromboplastin Time (s)', null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(50)], verbose_name='TCT (s)'),
        ),
        migrations.AddField(
            model_name='data',
            name='vsy',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Viscosity (cP)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(4)], verbose_name='VSY (cP)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='baso',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Basophil Granulocytes (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='BASO (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='hct',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Hematocrit (g/L)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1)], verbose_name='HCT (L/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='hgb',
            field=models.SmallIntegerField(blank=True, help_text='Hemoglobin (g/L)', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(250)], verbose_name='HGB (g/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='iga',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Inmunoglobulines A (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1000.0)], verbose_name='IGA (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='igm',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Inmunoglobulines - M (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(10.0), django.core.validators.MaxValueValidator(400.0)], verbose_name='IGM (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='mch',
            field=models.SmallIntegerField(blank=True, help_text='Mean Cell Hemoglobin (pg/cell)', null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(50)], verbose_name='MCH (pg/cell)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='mchc',
            field=models.SmallIntegerField(blank=True, help_text='Mean Corpuscular Hemoglobin Concentration (g/L)', null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(5)], verbose_name='MCHC (g/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='mcv',
            field=models.SmallIntegerField(blank=True, help_text='Mean Cell Volume (fL)', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(150)], verbose_name='MCV (fL)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='mono',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Monocytes (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(30.0)], verbose_name='MONO (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='neut',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Neutrophil Granulocytes (x10^9/L)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(30.0)], verbose_name='NEUT (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='plt',
            field=models.SmallIntegerField(blank=True, help_text='Platelets (x10^9/L or x1000/uL)', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(1000)], verbose_name='PLT (x10^9/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='rbc',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Red Blood Cells (x10^12/L or mlm/mm^3)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(2.0), django.core.validators.MaxValueValidator(8.0)], verbose_name='RBC (x10^12/L)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='rdw',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Red Blood Cell Distribution Width (%)', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(5.0), django.core.validators.MaxValueValidator(30.0)], verbose_name='RDW (%)'),
        ),
        migrations.AlterField(
            model_name='data',
            name='wbc',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='White Blood Cells (x10^12/L or x10^3/mm^3 or x10^3/uL^3)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(50.0)], verbose_name='WBC (x10^9/L)'),
        ),
    ]
